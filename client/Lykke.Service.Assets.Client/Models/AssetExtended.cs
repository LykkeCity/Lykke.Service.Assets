// Code generated by Microsoft (R) AutoRest Code Generator 1.2.2.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Lykke.Service.Assets.Client.Models
{
    using Lykke.Service;
    using Lykke.Service.Assets;
    using Lykke.Service.Assets.Client;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class AssetExtended
    {
        /// <summary>
        /// Initializes a new instance of the AssetExtended class.
        /// </summary>
        public AssetExtended()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AssetExtended class.
        /// </summary>
        public AssetExtended(AssetResponseModel asset = default(AssetResponseModel), AssetDescriptionsResponseModel description = default(AssetDescriptionsResponseModel), AssetCategoriesResponseModel category = default(AssetCategoriesResponseModel), AssetAttributesResponseModel attributes = default(AssetAttributesResponseModel))
        {
            Asset = asset;
            Description = description;
            Category = category;
            Attributes = attributes;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Asset")]
        public AssetResponseModel Asset { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Description")]
        public AssetDescriptionsResponseModel Description { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Category")]
        public AssetCategoriesResponseModel Category { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Attributes")]
        public AssetAttributesResponseModel Attributes { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Asset != null)
            {
                Asset.Validate();
            }
            if (Description != null)
            {
                Description.Validate();
            }
            if (Category != null)
            {
                Category.Validate();
            }
        }
    }
}
