// Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Lykke.Service.Assets.Client.Models
{
    using Lykke.Service;
    using Lykke.Service.Assets;
    using Lykke.Service.Assets.Client;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class AssetResponseModel
    {
        /// <summary>
        /// Initializes a new instance of the AssetResponseModel class.
        /// </summary>
        public AssetResponseModel()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AssetResponseModel class.
        /// </summary>
        /// <param name="blockchain">Possible values include: 'None',
        /// 'Bitcoin', 'Ethereum'</param>
        public AssetResponseModel(bool isBase, bool hideIfZero, int accuracy, int multiplierPower, bool isDisabled, bool hideWithdraw, bool hideDeposit, int defaultOrder, bool kycNeeded, double dustLimit, Blockchain blockchain, bool notLykkeAsset, bool issueAllowed, bool bankCardsDepositEnabled, bool swiftDepositEnabled, bool blockchainDepositEnabled, bool buyScreen, bool sellScreen, bool blockchainWithdrawal, bool swiftWithdrawal, bool forwardWithdrawal, bool crosschainWithdrawal, int forwardFrozenDays, string id = default(string), string blockChainId = default(string), string blockChainAssetId = default(string), string name = default(string), string symbol = default(string), string idIssuer = default(string), string assetAddress = default(string), string categoryId = default(string), string definitionUrl = default(string), IList<string> partnerIds = default(IList<string>), double? lowVolumeAmount = default(double?), string displayId = default(string), string forwardBaseAsset = default(string), string forwardMemoUrl = default(string), string iconUrl = default(string))
        {
            Id = id;
            BlockChainId = blockChainId;
            BlockChainAssetId = blockChainAssetId;
            Name = name;
            Symbol = symbol;
            IdIssuer = idIssuer;
            IsBase = isBase;
            HideIfZero = hideIfZero;
            Accuracy = accuracy;
            MultiplierPower = multiplierPower;
            IsDisabled = isDisabled;
            HideWithdraw = hideWithdraw;
            HideDeposit = hideDeposit;
            DefaultOrder = defaultOrder;
            KycNeeded = kycNeeded;
            AssetAddress = assetAddress;
            DustLimit = dustLimit;
            CategoryId = categoryId;
            Blockchain = blockchain;
            DefinitionUrl = definitionUrl;
            PartnerIds = partnerIds;
            NotLykkeAsset = notLykkeAsset;
            IssueAllowed = issueAllowed;
            LowVolumeAmount = lowVolumeAmount;
            DisplayId = displayId;
            BankCardsDepositEnabled = bankCardsDepositEnabled;
            SwiftDepositEnabled = swiftDepositEnabled;
            BlockchainDepositEnabled = blockchainDepositEnabled;
            BuyScreen = buyScreen;
            SellScreen = sellScreen;
            BlockchainWithdrawal = blockchainWithdrawal;
            SwiftWithdrawal = swiftWithdrawal;
            ForwardWithdrawal = forwardWithdrawal;
            CrosschainWithdrawal = crosschainWithdrawal;
            ForwardFrozenDays = forwardFrozenDays;
            ForwardBaseAsset = forwardBaseAsset;
            ForwardMemoUrl = forwardMemoUrl;
            IconUrl = iconUrl;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Id")]
        public string Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "BlockChainId")]
        public string BlockChainId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "BlockChainAssetId")]
        public string BlockChainAssetId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Symbol")]
        public string Symbol { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IdIssuer")]
        public string IdIssuer { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsBase")]
        public bool IsBase { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "HideIfZero")]
        public bool HideIfZero { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Accuracy")]
        public int Accuracy { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "MultiplierPower")]
        public int MultiplierPower { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsDisabled")]
        public bool IsDisabled { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "HideWithdraw")]
        public bool HideWithdraw { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "HideDeposit")]
        public bool HideDeposit { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DefaultOrder")]
        public int DefaultOrder { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "KycNeeded")]
        public bool KycNeeded { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AssetAddress")]
        public string AssetAddress { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DustLimit")]
        public double DustLimit { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CategoryId")]
        public string CategoryId { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'None', 'Bitcoin', 'Ethereum'
        /// </summary>
        [JsonProperty(PropertyName = "Blockchain")]
        public Blockchain Blockchain { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DefinitionUrl")]
        public string DefinitionUrl { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "PartnerIds")]
        public IList<string> PartnerIds { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "NotLykkeAsset")]
        public bool NotLykkeAsset { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IssueAllowed")]
        public bool IssueAllowed { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LowVolumeAmount")]
        public double? LowVolumeAmount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DisplayId")]
        public string DisplayId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "BankCardsDepositEnabled")]
        public bool BankCardsDepositEnabled { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SwiftDepositEnabled")]
        public bool SwiftDepositEnabled { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "BlockchainDepositEnabled")]
        public bool BlockchainDepositEnabled { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "BuyScreen")]
        public bool BuyScreen { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SellScreen")]
        public bool SellScreen { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "BlockchainWithdrawal")]
        public bool BlockchainWithdrawal { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SwiftWithdrawal")]
        public bool SwiftWithdrawal { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ForwardWithdrawal")]
        public bool ForwardWithdrawal { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CrosschainWithdrawal")]
        public bool CrosschainWithdrawal { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ForwardFrozenDays")]
        public int ForwardFrozenDays { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ForwardBaseAsset")]
        public string ForwardBaseAsset { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ForwardMemoUrl")]
        public string ForwardMemoUrl { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IconUrl")]
        public string IconUrl { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
        }
    }
}
